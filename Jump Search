#include <stdio.h>
#include <math.h> // Para usar sqrt

// Função Jump Search
int jumpSearch(int arr[], int size, int target) {
    int step = sqrt(size); // Tamanho do salto ideal
    int prev = 0;

    // Saltando enquanto o valor alvo é maior que o atual
    while (arr[(step < size ? step : size) - 1] < target) {
        prev = step;
        step += sqrt(size);

        // Se ultrapassou os limites, o elemento não está na lista
        if (prev >= size) {
            return -1;
        }
    }

    // Busca linear no intervalo entre prev e step
    for (int i = prev; i < size && i < step; i++) {
        if (arr[i] == target) {
            return i; // Elemento encontrado
        }
    }

    return -1; // Elemento não encontrado
}

int main() {
    int arr[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19}; // Lista ordenada
    int size = sizeof(arr) / sizeof(arr[0]);
    int target = 15; // Elemento alvo

    int result = jumpSearch(arr, size, target);

    if (result != -1) {
        printf("Elemento encontrado no índice %d.\n", result);
    } else {
        printf("Elemento não encontrado na lista.\n");
    }

    return 0;
}
