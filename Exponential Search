#include <stdio.h>

// Função auxiliar para busca binária
int binarySearch(int arr[], int left, int right, int target) {
    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == target) {
            return mid;
        }

        if (arr[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1; // Elemento não encontrado
}

// Função Exponential Search
int exponentialSearch(int arr[], int size, int target) {
    if (arr[0] == target) {
        return 0; // Elemento encontrado na primeira posição
    }

    // Determinar o intervalo para busca binária
    int range = 1;
    while (range < size && arr[range] <= target) {
        range *= 2;
    }

    // Realizar busca binária no intervalo determinado
    return binarySearch(arr, range / 2, (range < size ? range : size - 1), target);
}

int main() {
    int arr[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19}; // Lista ordenada
    int size = sizeof(arr) / sizeof(arr[0]);
    int target = 15; // Elemento a ser procurado

    int result = exponentialSearch(arr, size, target);

    if (result != -1) {
        printf("Elemento encontrado no índice %d.\n", result);
    } else {
        printf("Elemento não encontrado na lista.\n");
    }

    return 0;
}
